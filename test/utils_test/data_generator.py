import numpy as np
from astropy.wcs import WCS

from ait.map import Map

def generate_wcs():
    # https://docs.astropy.org/en/stable/wcs/example_create_imaging.html
    wcs = WCS(naxis=2)
    wcs.wcs.crpix = [-234.75, 8.3393]
    wcs.wcs.cdelt = [-0.066667, 0.066667]
    wcs.wcs.crval = [0, -90]
    wcs.wcs.ctype = ["RA---AIR", "DEC--AIR"]
    wcs.wcs.cunit = ["deg", "deg"] # need to specify units for celestial axes or it will default to dimensionless
    wcs.wcs.set_pv([(2, 1, 45.0)])
    return wcs

def generate_map_instance(with_err=True, with_snr=False):

    layers = {
        'image':
        np.array(
            [[
                0.92066655, 0.66787301, 0.45851795, 0.15498412, 0.45243878,
                0.40978055, 0.90571437, 0.73940995, 0.15306865, 0.45100558
            ],
             [
                 0.92278885, 0.812258, 0.63498511, 0.28754354, 0.4222605,
                 0.72976165, 0.96452377, 0.95187498, 0.02244657, 0.02406541
             ],
             [
                 0.95983149, 0.14853187, 0.28571372, 0.44798546, 0.79152115,
                 0.82884938, 0.83848183, 0.58449621, 0.61940842, 0.12270503
             ],
             [
                 0.27545064, 0.71802459, 0.56938934, 0.10821859, 0.43642653,
                 0.95385738, 0.06409412, 0.02358904, 0.15784789, 0.90485933
             ],
             [
                 0.55698062, 0.64670433, 0.12790534, 0.82945717, 0.40519446,
                 0.27326975, 0.96189876, 0.27403172, 0.20715287, 0.1941569
             ],
             [
                 0.46277264, 0.55925679, 0.48444726, 0.33066484, 0.30811549,
                 0.63513641, 0.67921775, 0.47803012, 0.36424474, 0.91045512
             ],
             [
                 0.91980621, 0.21448172, 0.45961883, 0.76900051, 0.58764056,
                 0.30603501, 0.13520996, 0.49019312, 0.9296945, 0.48709127
             ],
             [
                 0.78740079, 0.59978446, 0.11471889, 0.01025708, 0.23724314,
                 0.63820544, 0.38550622, 0.61878141, 0.12653648, 0.8545602
             ],
             [
                 0.50845636, 0.60349427, 0.39740691, 0.04515235, 0.19870614,
                 0.0300058, 0.36076293, 0.63736214, 0.45185529, 0.69732481
             ],
             [
                 0.77508705, 0.29078974, 0.69799633, 0.8772313, 0.1403435,
                 0.14430468, 0.69376044, 0.98800467, 0.39207747, 0.98459232
             ]])
    }

    snr = np.array(
        [[
            3.34767375, 4.83364418, 2.15657379, 2.64899958, 1.76373534,
            4.03822532, 1.46817825, 2.31678686, 4.00762926, 1.02703444
        ],
         [
             2.70253619, 4.9088553, 3.18001673, 3.65653537, 4.16334631,
             4.36952127, 4.28172709, 4.18651656, 2.156336, 2.81472274
         ],
         [
             4.17517385, 4.88444528, 4.99574505, 4.00538516, 3.78985862,
             3.19352931, 4.36858199, 3.78583504, 3.47866503, 2.88614478
         ],
         [
             3.69213978, 2.00826814, 2.23748623, 4.90063277, 2.64381021,
             4.14780487, 2.61396889, 2.43578917, 4.84841562, 1.00143876
         ],
         [
             2.00401223, 2.66441429, 3.7498786, 3.33457255, 1.10476562,
             4.88810941, 3.17189182, 2.47290622, 2.78955017, 2.36954055
         ],
         [
             3.71004052, 4.33445118, 2.419849, 3.8716879, 3.21421815,
             1.52697333, 2.79213844, 2.41782844, 4.62681126, 3.94788537
         ],
         [
             4.40596334, 2.97677491, 3.84220215, 3.26884577, 4.42317066,
             3.9389734, 2.63661853, 2.51200251, 4.39973085, 2.50285538
         ],
         [
             4.96626352, 4.64707199, 2.31721224, 4.90810667, 4.79625599,
             1.48623155, 4.48997389, 1.71609489, 4.5030618, 3.28188573
         ],
         [
             2.5435837, 3.70953618, 3.31013913, 2.52830894, 2.49497894,
             2.08681119, 4.84712955, 4.66528834, 1.27952357, 2.73138802
         ],
         [
             1.83978208, 4.52678131, 4.37976956, 3.08450287, 4.38026626,
             2.71683386, 1.65176564, 4.81194508, 2.47537533, 4.68185983
         ]])
    err = layers['image'] / snr

    if with_err:
        layers['image_err'] = err

    if with_snr:
        layers['image_snr'] = snr

    pixel_scale = 0.5
    metadata = {'aaa': 123, 'bbb': 456}

    wcs = generate_wcs()

    redshift = 0.1

    PSF_FWHM = 1.5

    return Map(layers=layers,
               pixel_scale=pixel_scale,
               metadata=metadata,
               wcs=wcs,
               PSF_FWHM=PSF_FWHM,
               redshift=redshift)
